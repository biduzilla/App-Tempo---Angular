{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let WeatherService = /*#__PURE__*/(() => {\n  class WeatherService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n    }\n    getWeatherData(lat, lon) {\n      return this.httpClient.get(environment.weatherApiBaseUrl, {\n        headers: new HttpHeaders().set(environment.XRapidAPIHostHeaderName, environment.XRapidAPIHostHeaderNameValue).set(environment.XRapidAPIKeyHeaderName, environment.XRapidAPIKeyHeaderNameValue),\n        params: new HttpParams().set('q', `${lat},${lon}`)\n      });\n    }\n    getLocal(cityName) {\n      return this.httpClient.get('https://address-from-to-latitude-longitude.p.rapidapi.com/geolocationapi', {\n        headers: new HttpHeaders().set(environment.XRapidAPIHostHeaderName, 'ca24613bedmshdb8c362ecba0242p12359fjsn337beb0c2285').set(environment.XRapidAPIKeyHeaderName, 'address-from-to-latitude-longitude.p.rapidapi.com'),\n        params: new HttpParams().set('address', cityName)\n      });\n    }\n  }\n  WeatherService.ɵfac = function WeatherService_Factory(t) {\n    return new (t || WeatherService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  WeatherService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WeatherService,\n    factory: WeatherService.ɵfac,\n    providedIn: 'root'\n  });\n  return WeatherService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}